#include <iostream>
#include <vector>

using namespace std;

bool solveSudoku(vector<vector<char>>& board, vector<short>& rows, vector<short>& colums, vector<short>& boxes, short x, short y) {
    if(x > 8) {
        return true;
    }

    short nextX = x;
    short nextY;

    if(y > 7) {
        ++nextX;
        nextY = 0;
    } else {
        nextY = y + 1;
    }

    if(board[x][y] > '.') {
        return solveSudoku(board, rows, colums, boxes, nextX, nextY);
    }

    short box = x - x % 3 + y / 3;
    short iValue;

    for(short value = 1; value < 10; ++value) {
        iValue = 1 << value;

        if((rows[x] & iValue) < 1 && (colums[y] & iValue) < 1 && (boxes[box] & iValue) < 1) {
            rows[x] |= iValue;
            colums[y] |= iValue;
            boxes[box] |= iValue;

            if(solveSudoku(board, rows, colums, boxes, nextX, nextY)) {
                board[x][y] = '0' + value;
                return true;
            }

            rows[x] ^= iValue;
            colums[y] ^= iValue;
            boxes[box] ^= iValue;
        }
    }

    return false;
}

void solveSudoku(vector<vector<char>>& board) {
    vector<short> rows(9, 0);
    vector<short> colums(9, 0);
    vector<short> boxes(9, 0);

    short j;
    for(short i = 0; i < 9; ++i) {
        for(j = 0; j < 9; ++j) {
            if(board[i][j] > '.') {
                rows[i] |= 1 << (board[i][j] - '0');
                colums[j] |= 1 << (board[i][j] - '0');
                boxes[i - i % 3 + j / 3] |= 1 << (board[i][j] - '0');
            }
        }
    }

    solveSudoku(board, rows, colums, boxes, 0, 0);
}

void printMatrix(vector<vector<char>> matrix) {
    for(vector<char> row : matrix) {
        for(char cell : row) {
            cout << cell << " ";
        }
        cout << endl;
    }
}

void test(vector<vector<char>> board, vector<vector<char>> expected) {
    cout << "Sudoku board:" << endl;
    printMatrix(board);

    cout << "Expected:" << endl;
    printMatrix(expected);

    solveSudoku(board);
    cout << "Result:" << endl;
    printMatrix(board);

    cout << endl;
}

int main() {
    vector<vector<char>> board1 = {
        { '5', '3', '.', '.', '7', '.', '.', '.', '.' },
        { '6', '.', '.', '1', '9', '5', '.', '.', '.' },
        { '.', '9', '8', '.', '.', '.', '.', '6', '.' },
        { '8', '.', '.', '.', '6', '.', '.', '.', '3' },
        { '4', '.', '.', '8', '.', '3', '.', '.', '1' },
        { '7', '.', '.', '.', '2', '.', '.', '.', '6' },
        { '.', '6', '.', '.', '.', '.', '2', '8', '.' },
        { '.', '.', '.', '4', '1', '9', '.', '.', '5' },
        { '.', '.', '.', '.', '8', '.', '.', '7', '9' }
    };
    vector<vector<char>> expected1 = {
        { '5', '3', '4', '6', '7', '8', '9', '1', '2' },
        { '6', '7', '2', '1', '9', '5', '3', '4', '8' },
        { '1', '9', '8', '3', '4', '2', '5', '6', '7' },
        { '8', '5', '9', '7', '6', '1', '4', '2', '3' },
        { '4', '2', '6', '8', '5', '3', '7', '9', '1' },
        { '7', '1', '3', '9', '2', '4', '8', '5', '6' },
        { '9', '6', '1', '5', '3', '7', '2', '8', '4' },
        { '2', '8', '7', '4', '1', '9', '6', '3', '5' },
        { '3', '4', '5', '2', '8', '6', '1', '7', '9' }
    };
    test(board1, expected1);

    vector<vector<char>> board2 = {
        { '5', '3', '4', '6', '7', '8', '9', '1', '2' },
        { '6', '7', '2', '1', '9', '5', '3', '4', '8' },
        { '1', '9', '8', '3', '4', '2', '5', '6', '.' },
        { '8', '5', '9', '7', '6', '1', '4', '2', '3' },
        { '4', '2', '6', '8', '5', '3', '7', '9', '1' },
        { '7', '1', '3', '9', '2', '4', '8', '5', '6' },
        { '9', '6', '1', '5', '3', '7', '2', '8', '4' },
        { '2', '8', '7', '4', '1', '9', '6', '3', '5' },
        { '3', '4', '5', '2', '8', '6', '1', '7', '9' }
    };
    vector<vector<char>> expected2 = {
        { '5', '3', '4', '6', '7', '8', '9', '1', '2' },
        { '6', '7', '2', '1', '9', '5', '3', '4', '8' },
        { '1', '9', '8', '3', '4', '2', '5', '6', '7' },
        { '8', '5', '9', '7', '6', '1', '4', '2', '3' },
        { '4', '2', '6', '8', '5', '3', '7', '9', '1' },
        { '7', '1', '3', '9', '2', '4', '8', '5', '6' },
        { '9', '6', '1', '5', '3', '7', '2', '8', '4' },
        { '2', '8', '7', '4', '1', '9', '6', '3', '5' },
        { '3', '4', '5', '2', '8', '6', '1', '7', '9' }
    };
    test(board2, expected2);

    vector<vector<char>> board3 = {
        { '5', '3', '4', '6', '7', '8', '9', '1', '2' },
        { '6', '7', '2', '1', '9', '5', '3', '4', '8' },
        { '1', '9', '8', '3', '4', '2', '5', '6', '7' },
        { '8', '5', '9', '7', '6', '1', '4', '2', '3' },
        { '4', '2', '6', '8', '5', '3', '7', '9', '1' },
        { '7', '1', '3', '9', '2', '4', '8', '5', '6' },
        { '9', '6', '1', '5', '3', '7', '2', '8', '.' },
        { '2', '8', '7', '4', '1', '9', '6', '3', '5' },
        { '3', '4', '5', '2', '8', '6', '1', '7', '9' }
    };
    vector<vector<char>> expected3 = {
        { '5', '3', '4', '6', '7', '8', '9', '1', '2' },
        { '6', '7', '2', '1', '9', '5', '3', '4', '8' },
        { '1', '9', '8', '3', '4', '2', '5', '6', '7' },
        { '8', '5', '9', '7', '6', '1', '4', '2', '3' },
        { '4', '2', '6', '8', '5', '3', '7', '9', '1' },
        { '7', '1', '3', '9', '2', '4', '8', '5', '6' },
        { '9', '6', '1', '5', '3', '7', '2', '8', '4' },
        { '2', '8', '7', '4', '1', '9', '6', '3', '5' },
        { '3', '4', '5', '2', '8', '6', '1', '7', '9' }
    };
    test(board3, expected3);

    vector<vector<char>> board4 = {
        { '5', '.', '4', '6', '7', '8', '9', '1', '2' },
        { '6', '7', '2', '1', '9', '5', '3', '4', '8' },
        { '1', '9', '8', '3', '4', '2', '5', '6', '7' },
        { '8', '5', '9', '7', '6', '1', '4', '2', '3' },
        { '4', '2', '6', '8', '5', '3', '7', '9', '1' },
        { '7', '1', '3', '9', '2', '4', '8', '5', '6' },
        { '9', '6', '1', '5', '3', '7', '2', '8', '4' },
        { '2', '8', '7', '4', '1', '9', '6', '3', '5' },
        { '3', '4', '5', '2', '8', '6', '1', '7', '9' }
    };

    vector<vector<char>> expected4 = {
        { '5', '3', '4', '6', '7', '8', '9', '1', '2' },
        { '6', '7', '2', '1', '9', '5', '3', '4', '8' },
        { '1', '9', '8', '3', '4', '2', '5', '6', '7' },
        { '8', '5', '9', '7', '6', '1', '4', '2', '3' },
        { '4', '2', '6', '8', '5', '3', '7', '9', '1' },
        { '7', '1', '3', '9', '2', '4', '8', '5', '6' },
        { '9', '6', '1', '5', '3', '7', '2', '8', '4' },
        { '2', '8', '7', '4', '1', '9', '6', '3', '5' },
        { '3', '4', '5', '2', '8', '6', '1', '7', '9' }
    };
    test(board4, expected4);

    vector<vector<char>> board5 = {
        { '5', '3', '.', '6', '7', '8', '9', '1', '2' },
        { '6', '.', '2', '1', '9', '5', '3', '4', '8' },
        { '1', '9', '8', '.', '4', '2', '5', '6', '7' },
        { '8', '5', '9', '7', '.', '1', '4', '2', '3' },
        { '4', '2', '6', '8', '5', '.', '7', '9', '1' },
        { '7', '1', '3', '9', '2', '4', '.', '5', '6' },
        { '9', '6', '1', '5', '3', '7', '2', '.', '4' },
        { '2', '8', '7', '4', '1', '9', '6', '3', '.' },
        { '3', '4', '5', '2', '8', '6', '1', '7', '9' }
    };
    vector<vector<char>> expected5 = expected1;
    test(board5, expected5);

    return 0;
}
